[{"E:\\Daihoc\\2020\\20201\\NMKTPM\\project\\servicecarmanagement_fe\\src\\index.js":"1","E:\\Daihoc\\2020\\20201\\NMKTPM\\project\\servicecarmanagement_fe\\src\\App.js":"2","E:\\Daihoc\\2020\\20201\\NMKTPM\\project\\servicecarmanagement_fe\\src\\reportWebVitals.js":"3","E:\\Daihoc\\2020\\20201\\NMKTPM\\project\\servicecarmanagement_fe\\src\\Routes\\MainRoute.js":"4","E:\\Daihoc\\2020\\20201\\NMKTPM\\project\\servicecarmanagement_fe\\src\\Navigation\\LeftDrawer.js":"5","E:\\Daihoc\\2020\\20201\\NMKTPM\\project\\servicecarmanagement_fe\\src\\Routes\\CarListRoute.js":"6","E:\\Daihoc\\2020\\20201\\NMKTPM\\project\\servicecarmanagement_fe\\src\\Routes\\HomeRoute.js":"7","E:\\Daihoc\\2020\\20201\\NMKTPM\\project\\servicecarmanagement_fe\\src\\Routes\\LoginRoute.js":"8","E:\\Daihoc\\2020\\20201\\NMKTPM\\project\\servicecarmanagement_fe\\src\\Routes\\PrivateRoute.js":"9","E:\\Daihoc\\2020\\20201\\NMKTPM\\project\\servicecarmanagement_fe\\src\\Routes\\PublicRoute.js":"10","E:\\Daihoc\\2020\\20201\\NMKTPM\\project\\servicecarmanagement_fe\\src\\Routes\\ScheduleRoute.js":"11","E:\\Daihoc\\2020\\20201\\NMKTPM\\project\\servicecarmanagement_fe\\src\\Utils\\Common.js":"12","E:\\Daihoc\\2020\\20201\\NMKTPM\\project\\servicecarmanagement_fe\\src\\Pages\\HomePage.js":"13","E:\\Daihoc\\2020\\20201\\NMKTPM\\project\\servicecarmanagement_fe\\src\\Pages\\CarList.js":"14","E:\\Daihoc\\2020\\20201\\NMKTPM\\project\\servicecarmanagement_fe\\src\\Pages\\Login.js":"15","E:\\Daihoc\\2020\\20201\\NMKTPM\\project\\servicecarmanagement_fe\\src\\Pages\\Schedule.js":"16","E:\\Daihoc\\2020\\20201\\NMKTPM\\project\\servicecarmanagement_fe\\src\\component\\AddSchedule.js":"17","E:\\Daihoc\\2020\\20201\\NMKTPM\\project\\servicecarmanagement_fe\\src\\component\\AddCarlist.js":"18"},{"size":517,"mtime":1608828878573,"results":"19","hashOfConfig":"20"},{"size":833,"mtime":1608834541298,"results":"21","hashOfConfig":"20"},{"size":375,"mtime":1608828878574,"results":"22","hashOfConfig":"20"},{"size":771,"mtime":1609835486202,"results":"23","hashOfConfig":"20"},{"size":7309,"mtime":1610020375664,"results":"24","hashOfConfig":"20"},{"size":424,"mtime":1608828878571,"results":"25","hashOfConfig":"20"},{"size":309,"mtime":1608828878571,"results":"26","hashOfConfig":"20"},{"size":412,"mtime":1609835486201,"results":"27","hashOfConfig":"20"},{"size":448,"mtime":1609835486202,"results":"28","hashOfConfig":"20"},{"size":485,"mtime":1609835486203,"results":"29","hashOfConfig":"20"},{"size":430,"mtime":1608878480252,"results":"30","hashOfConfig":"20"},{"size":852,"mtime":1609835486204,"results":"31","hashOfConfig":"20"},{"size":15285,"mtime":1608878480248,"results":"32","hashOfConfig":"20"},{"size":6422,"mtime":1610056193715,"results":"33","hashOfConfig":"20"},{"size":13318,"mtime":1624552058954,"results":"34","hashOfConfig":"20"},{"size":5901,"mtime":1610056193716,"results":"35","hashOfConfig":"20"},{"size":6234,"mtime":1610056193716,"results":"36","hashOfConfig":"20"},{"size":8588,"mtime":1610056193716,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1y07q0j",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"80","usedDeprecatedRules":"40"},"E:\\Daihoc\\2020\\20201\\NMKTPM\\project\\servicecarmanagement_fe\\src\\index.js",[],["81","82"],"E:\\Daihoc\\2020\\20201\\NMKTPM\\project\\servicecarmanagement_fe\\src\\App.js",[],"E:\\Daihoc\\2020\\20201\\NMKTPM\\project\\servicecarmanagement_fe\\src\\reportWebVitals.js",[],"E:\\Daihoc\\2020\\20201\\NMKTPM\\project\\servicecarmanagement_fe\\src\\Routes\\MainRoute.js",[],"E:\\Daihoc\\2020\\20201\\NMKTPM\\project\\servicecarmanagement_fe\\src\\Navigation\\LeftDrawer.js",["83","84"],"import { CssBaseline, Drawer, IconButton, makeStyles, useTheme, ListItem, List, ListItemText, ListItemIcon, Divider } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\nimport React, { useState } from 'react';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { Toolbar } from '@material-ui/core';\r\nimport ChervonLeftIcon from '@material-ui/icons/ChevronLeft'\r\nimport ChervonRightIcon from '@material-ui/icons/ChevronRight'\r\nimport Home from '@material-ui/icons/Home'\r\nimport CommuteTwoToneIcon from '@material-ui/icons/CommuteTwoTone';\r\nimport DateRangeTwoToneIcon from '@material-ui/icons/DateRangeTwoTone';\r\nimport {Link} from 'react-router-dom';\r\nimport { getUser, removeUserSession } from '../Utils/Common';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nconst drawerWidth = 240;\r\nconst myStyle = makeStyles((theme) =>(\r\n    {\r\n        root :  {\r\n                    display : 'flex',\r\n                },\r\n        \r\n        centerbox :   {\r\n                        position : 'fixed',\r\n                        marginTop : '20% ',\r\n                        width : drawerWidth,\r\n                    },\r\n        \r\n        list :  {\r\n                    position : 'absolute',\r\n                    top : '50%',\r\n                    transform : 'translateY(-50%)',\r\n                    width : '100%',\r\n                },\r\n        menuButton :    {   \r\n                            position : 'fixed',\r\n                            zIndex : '10',\r\n                            marginRight : theme.spacing(2),\r\n                            borderWidth:1,\r\n                            borderColor:'rgba(0,0,0,0.2)',\r\n                            alignItems:'center',\r\n                            justifyContent:'center',\r\n                            backgroundColor : '#A9A9A9',\r\n                            top : '0%',\r\n                            left : theme.spacing(2),\r\n                            width:'100',\r\n                            height:'100',\r\n                            borderRadius:'50',\r\n                        },\r\n\r\n        hide :  { \r\n                    display : 'none',\r\n                },\r\n\r\n        drawer :    {   \r\n                        width : drawerWidth,\r\n                        flexShrink : 0,\r\n                    },\r\n        drawerPaper :   {\r\n                            width : drawerWidth,\r\n                            backgroundColor : \"#ffca18\",\r\n                        },\r\n        drawerHeader :  {\r\n                            display : 'flex',\r\n                            alignItems : 'center',\r\n                            padding : theme.spacing(0,1),\r\n                            justifyContent: 'flex-end',\r\n                        },\r\n\r\n        textcenter :    {\r\n                            display : 'flex',\r\n                            textAlign : 'center',\r\n                        },\r\n\r\n        logout :    {\r\n                        position : 'inherit',\r\n                        width : drawerWidth,\r\n                        bottom : '0%',\r\n                    },\r\n        logoutdivider : {\r\n                            position : 'relative',\r\n                            top : '88%',\r\n                        }\r\n    }\r\n))\r\n\r\n\r\nfunction LeftDrawer(props) {\r\n    const myclass = myStyle();\r\n    const theme = useTheme();\r\n    var [open, setOpen] = useState(false);\r\n    var name = useState();\r\n    function handleDrawer(value) {\r\n        setOpen(value);\r\n    }\r\n    const user = getUser();\r\n\r\n    // handle click event of logout button\r\n    function handleLogout() {\r\n        setOpen(false);\r\n        removeUserSession();\r\n        props.history.push(\"/login\");\r\n    }\r\n    return (\r\n        <div className={myclass.root}>\r\n            <CssBaseline />\r\n            <Toolbar>\r\n                <IconButton\r\n                    color=\"inherit\"\r\n                    aria-label=\"Drawer\"\r\n                    onClick={()=>handleDrawer(true)}\r\n                    edge=\"start\"\r\n                    className={clsx(myclass.menuButton, open && myclass.hide)}\r\n                >\r\n                    <MenuIcon \r\n                        fontSize = 'large'\r\n                        style = {{color : '#ffffff',  fontSizeLarge : 'large'}}\r\n                        \r\n                    />\r\n                </IconButton>\r\n            </Toolbar>\r\n            <Drawer\r\n                className = {myclass.drawer}\r\n                variant = \"persistent\"\r\n                anchor = \"left\"\r\n                open = {open}\r\n                classes ={{ paper : myclass.drawerPaper }}\r\n            >\r\n                <div className = {myclass.drawerHeader}>\r\n                    <IconButton\r\n                        onClick = {()=>handleDrawer(false)}\r\n                    >\r\n                        {theme.direction === 'ltr' ? <ChervonLeftIcon color = 'primary' /> : <ChervonRightIcon color = 'primary'/>}\r\n                    </IconButton>\r\n                    <Divider/>\r\n                </div>\r\n\r\n                \r\n\r\n                <List\r\n                    className = {myclass.list}\r\n                >\r\n                    <ListItem \r\n                        button\r\n                        component = {Link}\r\n                        to = \"/\"\r\n                        onClick = {()=>handleDrawer(false)}\r\n                    >\r\n                        <ListItemIcon>\r\n                            <Home/>\r\n                        </ListItemIcon>\r\n\r\n                        <ListItemText className = {myclass.textcenter} primary=\"Home Page\"/>\r\n                    </ListItem>\r\n\r\n                    <ListItem \r\n                        button\r\n                        component = {Link}\r\n                        to = \"/carlist\"\r\n                        onClick = {()=>handleDrawer(false)} \r\n                    >\r\n\r\n                        <ListItemIcon>\r\n                            <CommuteTwoToneIcon/>\r\n                        </ListItemIcon>\r\n\r\n                        <ListItemText className = {myclass.textcenter} primary=\"Car List\"/>\r\n                    </ListItem>\r\n\r\n                    <ListItem \r\n                        button\r\n                        component = {Link}\r\n                        to = \"/schedule\"\r\n                        onClick = {()=>handleDrawer(false)} \r\n                    >\r\n\r\n                        <ListItemIcon>\r\n                            <DateRangeTwoToneIcon/>\r\n                        </ListItemIcon>\r\n                        \r\n                        <ListItemText className = {myclass.textcenter} primary=\"Schedule\"/>\r\n                    </ListItem>\r\n                </List>\r\n                <Divider\r\n                    className = {myclass.logoutdivider}\r\n                />\r\n                <ListItem \r\n                    button\r\n                    component = {Link}\r\n                    to = \"/login\"\r\n                    onClick = {()=>handleLogout()} \r\n                    className = {myclass.logout}\r\n                >\r\n                    <ListItemIcon>\r\n                        <ExitToAppIcon/>\r\n                    </ListItemIcon>\r\n                    <ListItemText className = {myclass.textcenter} primary=\"Logout\"/>\r\n                </ListItem>\r\n            </Drawer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(LeftDrawer);","E:\\Daihoc\\2020\\20201\\NMKTPM\\project\\servicecarmanagement_fe\\src\\Routes\\CarListRoute.js",[],"E:\\Daihoc\\2020\\20201\\NMKTPM\\project\\servicecarmanagement_fe\\src\\Routes\\HomeRoute.js",[],"E:\\Daihoc\\2020\\20201\\NMKTPM\\project\\servicecarmanagement_fe\\src\\Routes\\LoginRoute.js",[],"E:\\Daihoc\\2020\\20201\\NMKTPM\\project\\servicecarmanagement_fe\\src\\Routes\\PrivateRoute.js",[],"E:\\Daihoc\\2020\\20201\\NMKTPM\\project\\servicecarmanagement_fe\\src\\Routes\\PublicRoute.js",["85"],"import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport HomePage from '../Pages/HomePage';\r\nimport { getToken } from '../Utils/Common';\r\n \r\n// handle the private routes\r\nfunction PublicRoute({ component: Component, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => getToken() ? <Redirect to={{ pathname: '/', state: { from: props.location } }} /> : <Component {...props} /> }\r\n    />\r\n  )\r\n}\r\n \r\nexport default PublicRoute;","E:\\Daihoc\\2020\\20201\\NMKTPM\\project\\servicecarmanagement_fe\\src\\Routes\\ScheduleRoute.js",[],"E:\\Daihoc\\2020\\20201\\NMKTPM\\project\\servicecarmanagement_fe\\src\\Utils\\Common.js",[],"E:\\Daihoc\\2020\\20201\\NMKTPM\\project\\servicecarmanagement_fe\\src\\Pages\\HomePage.js",[],"E:\\Daihoc\\2020\\20201\\NMKTPM\\project\\servicecarmanagement_fe\\src\\Pages\\CarList.js",["86","87"],"import { Button, makeStyles } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { forwardRef } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport AddCarlist from \"../component/AddCarlist\";\r\nimport axios from \"axios\";\r\nimport { CenterFocusStrong } from \"@material-ui/icons\";\r\nconst myStyle = makeStyles((theme) =>(\r\n    {\r\n        root :  {\r\n                    display : \"flex\",\r\n                    flexDirection : 'column',\r\n                },\r\n        contariner :    {\r\n                            position : \"fixed\",\r\n                            top : \"0%\",\r\n                            width : \"100%\",\r\n                            height : \"100vh\",\r\n                            backgroundColor : \"#585858\",\r\n                        },\r\n        contariner1 :   {\r\n                            position : \"fixed\",\r\n                            width : \"90%\",\r\n                            height : \"100vh\",\r\n                            top : '5%',\r\n                            left : '5%',\r\n                            \r\n                        },\r\n        header :    {\r\n                        position : 'absolute',\r\n                        fontSize : '50px',\r\n                        top : '3px',\r\n                        left : '530px',\r\n                        textAlign : 'left',\r\n                    },\r\n        addbutton : {\r\n                        position : 'absolute',\r\n                        top : '6%',\r\n                        right : '30%',\r\n                        borderWidth: theme.spacing(3),\r\n                        width:  theme.spacing(3),\r\n                        height: theme.spacing(3),\r\n                        \r\n                        borderRadius: theme.spacing(3),\r\n                        \r\n                        transform : 'scale(1.5)',\r\n                    }\r\n    }\r\n))\r\nfunction Schedule(params) {\r\n  const myclass = myStyle();\r\n  const tableIcons = {\r\n    Add: (props) => <AddCarlist />,\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => (\r\n      <ChevronRight {...props} ref={ref} />\r\n    )),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => (\r\n      <ChevronLeft {...props} ref={ref} />\r\n    )),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => (\r\n      <Remove {...props} ref={ref} />\r\n    )),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n  };\r\n  const [startErasing, SetStartErasing] = useState(true);\r\n  \r\n  function ToggleErase() {\r\n\r\n    if (startErasing === true) SetStartErasing(false);\r\n    else SetStartErasing(true);\r\n  }\r\n  const columns = [\r\n    { field: \"id\", title: \"ID xe\" },\r\n    { field: \"license\", title: \"Biển số\"},\r\n    { field: \"driver\", title: \"Lái xe\" },\r\n    { field: \"brand\", title: \"Hãng xe\" },\r\n    { field: \"manufacturedate\", title: \"Đời xe\" },\r\n    { field: \"registerdate\", title: \"Ngày đăng kiểm\" },\r\n    { field: \"cartype\", title: \"Loại xe\" },\r\n    { field: \"state\", title: \"Trạng thái\" },\r\n  ];\r\n\r\n  const [data,setData] = useState([]);\r\n  function handleGet() \r\n  {\r\n    axios\r\n      .get(\"http://localhost:8080/carlist/get\")\r\n      .then(res => setData(res.data));\r\n  }\r\n  useEffect(() => {\r\n    handleGet();\r\n  }, []);\r\n  function handleDeletion(Data)\r\n  {\r\n    var DeleteIds = [];\r\n    Data.forEach(element => { DeleteIds.push(element.id) \r\n    });\r\n    console.log(DeleteIds);\r\n    axios\r\n    .delete(`http://localhost:8080/carlist/delete/${DeleteIds}`)\r\n    .then((response) => {\r\n        alert(\"Delete successful.\")\r\n        window.location.reload();\r\n    })\r\n  }\r\n  const components={\r\n    Actions: props => {\r\n      return (props.data == null) ?\r\n            (<AddCarlist key = {0}/>)\r\n            :\r\n            (<Button key = {1}\r\n                onClick = {() => handleDeletion(props.data)}\r\n            >\r\n                <DeleteIcon/>\r\n            </Button>)\r\n    }\r\n  };\r\n  return (\r\n    <div className = {myclass.root}>\r\n            <div className= {myclass.contariner}>\r\n                <div\r\n                    className = {myclass.contariner1}\r\n                >\r\n      <MaterialTable\r\n        icons={tableIcons}\r\n        options={{ search: true }}\r\n        title={\"Danh sách xe\"}\r\n        columns={columns}\r\n        textAlign = {CenterFocusStrong}\r\n        data={data}\r\n        options={{\r\n            selection: true,\r\n            paging:true,\r\n            pageSize:10,       // make initial page size\r\n            emptyRowsWhenPaging: true,   //to make page size fix in case of less data rows\r\n            pageSizeOptions:[10],   \r\n          }}\r\n        components={components}\r\n      >\r\n    </MaterialTable>\r\n    </div>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Schedule;\r\n","E:\\Daihoc\\2020\\20201\\NMKTPM\\project\\servicecarmanagement_fe\\src\\Pages\\Login.js",["88","89","90"],"import React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { setUserSession } from \"../Utils/Common\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { InputAdornment, Grid, Box, Modal, Backdrop, Fade } from \"@material-ui/core\";\r\nimport { AccountCircle, LockRounded, Email } from \"@material-ui/icons\";\r\nimport truck from \"../Image/truck1.png\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    body: {\r\n      display: \"flex\",\r\n      position : \"fixed\",\r\n      flexDirection: \"column\",\r\n      //alignItems: \"center\",\r\n      backgroundImage: `url(${truck})`,\r\n      backgroundSize : 'cover',\r\n      spacing: 10,\r\n      width : \"100vw\",\r\n      height : \"100vh\",\r\n      top : \"0%\",\r\n      left : \"0%\",\r\n\r\n  },\r\n  box: {\r\n    background: \"white\",\r\n    //marginTop: \"25vh\",\r\n    marginLeft: '67vw',\r\n    position : \"absolute\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    width: '33vw',\r\n    height: '100vh',\r\n    paddingBottom: theme.spacing(5),\r\n    paddingLeft: theme.spacing(10),\r\n    paddingRight: theme.spacing(10),\r\n    paddingTop:'20vh',\r\n  },\r\n  form: {\r\n    marginTop: theme.spacing(1),\r\n    alignItems: \"center\",\r\n    minWidth: 300,\r\n    maxWidth: 400,\r\n  },\r\n  button: {\r\n      background: 'linear-gradient(45deg, rgba(255,228,132,1) 0%, rgba(255,202,24,1) 100%)',\r\n  },\r\n \r\n  textField: {\r\n      //color: 'white',\r\n  },\r\n  registerbutton :  {\r\n                      background : 'linear-gradient(45deg, rgba(255,228,132,1) 0%, rgba(255,202,24,1) 100%)',\r\n                      position : 'inherit',\r\n                      width : '33%',\r\n                      marginTop : theme.spacing(12),\r\n                      right : theme.spacing(10),\r\n                    },\r\n  modal :   {\r\n              display : 'flex',\r\n              padding : theme.spacing(1),\r\n              alignItems : 'center',\r\n              justifyContent : 'center',\r\n            },\r\n  paper : {\r\n            backgroundColor: theme.palette.background.paper,\r\n            border: '2px solid #000',\r\n            boxShadow: theme.shadows[5],\r\n            padding: theme.spacing(2, 4, 3),\r\n            fontSize : '50px',\r\n          },\r\n}));\r\n\r\nfunction Login(props) {\r\n  const classes = useStyles();\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [register,setRegister] = useState(false);\r\n  const rootRef = React.useRef(null);\r\n\r\n  const [reusername,setReusername] = useState(\"\");\r\n  const [reemail,setReemail] = useState(\"\");\r\n  const [repassword,setRepassword] = useState(\"\");\r\n  const [reconfirmpassword,setReconfirmpassword] = useState(\"\");\r\n\r\n  const [popup,setPopup] = useState(false);\r\n  const handleRegisterUsername = (event) =>{\r\n    setReusername(event.target.value);\r\n  };\r\n  const handleRegisterEmail = (event) =>{\r\n    setReemail(event.target.value);\r\n  };\r\n  const handleRegisterPassword = (event) =>{\r\n    setRepassword(event.target.value);\r\n  };\r\n  const handleRegisterConfirmpassword = (event) =>{\r\n    setReconfirmpassword(event.target.value);\r\n  };\r\n\r\n  const handleUsernameChange = (event) => {\r\n    setUsername(event.target.value);\r\n  };\r\n  function handleRegister(value)\r\n  {\r\n    setRegister(value);\r\n  }\r\n  const handlePasswordChange = (event) => {\r\n    //setIsTyping(true);\r\n    setPassword(event.target.value);\r\n  };\r\n\r\n  // handle button click of login form\r\n  const handleSubmit = () => {\r\n    setError(null);\r\n    setLoading(true);\r\n    axios\r\n      .post(\"http://localhost:8080/users/login\",{\r\n        username: username,\r\n        password: password,\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n        if(response.data.status === 401)\r\n        {\r\n          setLoading(false);\r\n          setError(response.data.message) ;    \r\n        }\r\n        else\r\n        {\r\n          if(response.data.status === 0)\r\n          {\r\n            setLoading(false);\r\n            setUserSession(response.data.token, response.data.user);\r\n            props.history.push(\"/\");\r\n          }\r\n        }\r\n        })\r\n        .catch((error)=>{\r\n          console.log(error.response);\r\n          setError(\"Something went wrong. Please try again later.\");\r\n          setLoading(false);\r\n        });\r\n  };\r\n  const handleClosepopup = () =>{\r\n      setPopup(false);\r\n      setRegister(false);\r\n      setLoading(false);\r\n      props.history.push('/login');\r\n  }\r\n  const handleSubmitRegister = () => {\r\n    var data = {\r\n      reusername : reusername,\r\n      reemail : reemail,\r\n      repassword : repassword,\r\n      reconfirmpassword : reconfirmpassword,\r\n\r\n    };\r\n    setError(null);\r\n    setLoading(true);\r\n    axios .post(\"http://localhost:8080/users/register\",data)\r\n          .then ((res) =>\r\n                        {\r\n                          if(res.data.status !== 0)\r\n                          {\r\n                            setLoading(false);\r\n                            setError(res.data.message);\r\n                          }\r\n                          else\r\n                          {\r\n                            setPopup(true);\r\n                          }\r\n                        }\r\n                )\r\n          .catch  ((error) => {\r\n                                setError(\"Something went wrond.\");\r\n                                setLoading(false);\r\n                              }\r\n                  )\r\n  }\r\n  return (\r\n    <div className = {classes.body}>\r\n    <Box\r\n      ///borderRadius={8}\r\n      boxShadow={4}\r\n      borderColor = \"white\"\r\n      className = {classes.box}\r\n      \r\n    >\r\n      { register !== true ? [\r\n        <Typography component=\"h1\" variant=\"h4\" p = {10}>\r\n          Sign in\r\n        </Typography>,\r\n          <TextField\r\n            className = {classes.textField}\r\n            autoComplete='off'\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            fullWidth\r\n            id=\"user\"\r\n            label=\"Username\"\r\n            name=\"user\"\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <AccountCircle />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n            onChange={handleUsernameChange}\r\n            autoFocus\r\n          />,\r\n\r\n          <TextField\r\n            className = {classes.textField}\r\n            autoComplete='off'\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <LockRounded />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n            onChange={handlePasswordChange}\r\n            autoComplete=\"current-password\"\r\n            />,\r\n            loading === true ? (\r\n              <Button\r\n                disabled={true}\r\n                fullWidth\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                name = 'Username'\r\n                lable = 'Username'\r\n                id = 'Username'\r\n              >\r\n                <CircularProgress />\r\n                Login\r\n              </Button>\r\n            ) : (\r\n              <Button\r\n                fullWidth\r\n                className = {classes.button}\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleSubmit}\r\n              >\r\n                Login\r\n              </Button>\r\n            ),\r\n            <Grid container justify=\"center\">\r\n              <Grid item>\r\n                <Button> Forgot password?</Button>\r\n                <Button onClick = {() => handleRegister(true)}> Register</Button>\r\n              </Grid>\r\n            </Grid>,\r\n            error && <><small style={{ color: 'red' }}>{error}</small><br /></>,<br />,\r\n          ] :\r\n          [\r\n            <Typography component=\"h1\" variant=\"h4\" >\r\n              Register\r\n            </Typography>,\r\n            <TextField\r\n              autoComplete = 'off'\r\n              variant = 'outlined'\r\n              margin = 'normal'\r\n              fullWidth = {true}\r\n              id=\"reuser\"\r\n              label=\"Username\"\r\n              name=\"User\"\r\n              InputProps= {{\r\n                startAdornment: (\r\n                                  <InputAdornment position=\"start\">\r\n                                    <AccountCircle />\r\n                                  </InputAdornment>\r\n                                ),\r\n                          }}\r\n              onChange={handleRegisterUsername}\r\n              autoFocus\r\n            />,\r\n            <TextField\r\n              autoComplete = 'off'\r\n              variant = 'outlined'\r\n              fullWidth = {true}\r\n              id=\"reemail\"\r\n              margin = 'normal'\r\n              label=\"Email\"\r\n              name=\"Email\"\r\n              InputProps= {{\r\n                startAdornment: (\r\n                                  <InputAdornment position=\"start\">\r\n                                    <Email />\r\n                                  </InputAdornment>\r\n                                ),\r\n                          }}\r\n              onChange={handleRegisterEmail}\r\n              autoFocus\r\n            />,\r\n            <TextField\r\n              autoComplete = 'off'\r\n              variant = 'outlined'\r\n              fullWidth = {true}\r\n              margin = 'normal'\r\n              id=\"repassword\"\r\n              label=\"Password\"\r\n              name=\"Password\"\r\n              type=\"password\"\r\n              InputProps= {{\r\n                startAdornment: (\r\n                                  <InputAdornment position=\"start\">\r\n                                    <LockRounded />\r\n                                  </InputAdornment>\r\n                                ),\r\n                          }}\r\n              onChange={handleRegisterPassword}\r\n              autoFocus\r\n            />,\r\n            <TextField\r\n              autoComplete = 'off'\r\n              variant = 'outlined'\r\n              fullWidth = {true}\r\n              margin = 'normal'\r\n              id=\"reconfirmpassword\"\r\n              label=\"Confirm Password\"\r\n              name=\"ConfirmPassword\"\r\n              type=\"password\"\r\n              InputProps= {{\r\n                startAdornment: (\r\n                                  <InputAdornment position=\"start\">\r\n                                    <LockRounded />\r\n                                  </InputAdornment>\r\n                                ),\r\n                          }}\r\n              onChange={handleRegisterConfirmpassword}\r\n              autoFocus\r\n            />,\r\n            loading !== true ?[\r\n              <Button\r\n                className = {classes.cancelbutton}\r\n                type=\"Cancle\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => handleRegister(false)}\r\n              >\r\n                Cancel\r\n              </Button>,\r\n              <Button\r\n                className = {classes.registerbutton}\r\n                type=\"Register\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleSubmitRegister}\r\n              >\r\n                Register\r\n              </Button>,\r\n            ]:[\r\n                <Button\r\n                  disabled\r\n                  className = {classes.cancelbutton}\r\n                  type=\"Cancle\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                >\r\n                  Cancel\r\n                </Button>,\r\n                <Button\r\n                  disabled\r\n                  className = {classes.registerbutton}\r\n                  type=\"Register\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                >\r\n                  <CircularProgress />\r\n                  Register\r\n                </Button>,\r\n            ],\r\n            <Modal\r\n              aria-labelledby=\"transition-modal-title\"\r\n              aria-describedby=\"transition-modal-description\"\r\n              className={classes.modal}\r\n              open={popup}\r\n              onClose={handleClosepopup}\r\n              closeAfterTransition\r\n              BackdropComponent={Backdrop}\r\n              BackdropProps={ {\r\n                                timeout: 500,\r\n                              }\r\n                            }\r\n            >\r\n              <Fade in={popup}>\r\n                <div className={classes.paper}>\r\n                  <p id=\"transition-modal-description\">Successful</p>\r\n                </div>\r\n              </Fade>\r\n            </Modal>,\r\n            error && <><small style={{ color: 'red' }}>{error}</small><br /></>,<br />,\r\n          ]\r\n        }\r\n    </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Login);\r\n","E:\\Daihoc\\2020\\20201\\NMKTPM\\project\\servicecarmanagement_fe\\src\\Pages\\Schedule.js",["91","92","93","94","95","96","97","98"],"import { Button, makeStyles } from \"@material-ui/core\";\r\nimport { MDBCard, MDBCardBody, MDBDataTableV5 } from \"mdbreact\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { forwardRef } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport AddSchedule from \"../component/AddSchedule\";\r\nimport axios from \"axios\";\r\nimport { TablePagination } from '@material-ui/core';\r\nconst myStyle = makeStyles((theme) =>(\r\n  {\r\n      root :  {\r\n                  display : \"flex\",\r\n                  flexDirection : 'column',\r\n              },\r\n      contariner :    {\r\n                          position : \"fixed\",\r\n                          top : \"0%\",\r\n                          width : \"100%\",\r\n                          height : \"100vh\",\r\n                          backgroundColor : \"#ffca18\",\r\n                      },\r\n      contariner1 :   {\r\n                          position : \"relative\",\r\n                          width : \"90%\",\r\n                          height : \"200%\",\r\n                          top : '5%',\r\n                          left : '5%',\r\n                      },\r\n      header :    {\r\n                      position : 'absolute',\r\n                      fontSize : '50px',\r\n                      top : '3px',\r\n                      left : '450px',\r\n                    \r\n      },\r\n  }\r\n))\r\nfunction Schedule(params) {\r\n  const myclass = myStyle();\r\n  const tableIcons = {\r\n    Add: (props) => <AddSchedule />,\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => (\r\n      <ChevronRight {...props} ref={ref} />\r\n    )),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => (\r\n      <ChevronLeft {...props} ref={ref} />\r\n    )),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => (\r\n      <Remove {...props} ref={ref} />\r\n    )),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n  };\r\n  const [startErasing, SetStartErasing] = useState(true);\r\n  function ToggleErase() {\r\n    if (startErasing === true) SetStartErasing(false);\r\n    else SetStartErasing(true);\r\n  }\r\n  const columns = [\r\n    { field: \"id\", title: \"ID chuyến\" },\r\n    { field: \"carid\", title: \"ID xe\" },\r\n    { field: \"departure\", title: \"Điểm đi\" },\r\n    { field: \"destination\", title: \"Điểm đến\" },\r\n    { field: \"startingtime\", title: \"Thời điểm đi\" },\r\n    { field: \"arrivingtime\", title: \"Thòi điểm đến\" },\r\n    { field: \"capacity\", title: \"Số chỗ/ Trọng tải\" },\r\n  ];\r\n\r\n  const [data,setData] = useState([]);\r\n  function handleGet()\r\n  {\r\n    axios.get(\"http://localhost:8080/schedule/get\")\r\n      .then(response => setData(response.data))\r\n  }\r\n  useEffect(() => {\r\n    handleGet();\r\n  }, [])\r\n  function handleDeletion(Data)\r\n  {\r\n    var DeleteIds = [];\r\n    Data.forEach(element => {\r\n      DeleteIds.push(element.id)\r\n    });\r\n    console.log(DeleteIds);\r\n    axios\r\n    .delete(`http://localhost:8080/schedule/delete/${DeleteIds}`)\r\n    .then((response) => {alert('deletion successful.');\r\n    window.location.reload();\r\n        \r\n    })\r\n  }\r\n  const components={\r\n    Actions: props => {\r\n      return (props.data == null) ? (\r\n        <AddSchedule key = {0}/> ) : ( \r\n        <Button key = {1}\r\n            onClick = {() => handleDeletion(props.data)}\r\n        >\r\n            <DeleteIcon/>\r\n        </Button>);\r\n    }\r\n  };\r\n  return (\r\n    <div className = {myclass.root}>\r\n            <div className= {myclass.contariner}>\r\n                <div\r\n                    className = {myclass.contariner1}\r\n                >\r\n      \r\n      <MaterialTable\r\n        icons={tableIcons} \r\n        options={{ search: true }}\r\n        title={\"Danh sách lịch trình\"}\r\n        columns={columns}\r\n        data={data}\r\n        options={{\r\n          selection: true,\r\n          paging:true,\r\n          pageSize:10,       // make initial page size\r\n          emptyRowsWhenPaging: true,   //to make page size fix in case of less data rows\r\n          pageSizeOptions:[10],   \r\n        }}\r\n        components={components}\r\n      >\r\n    </MaterialTable>\r\n    </div>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Schedule;\r\n","E:\\Daihoc\\2020\\20201\\NMKTPM\\project\\servicecarmanagement_fe\\src\\component\\AddSchedule.js",[],"E:\\Daihoc\\2020\\20201\\NMKTPM\\project\\servicecarmanagement_fe\\src\\component\\AddCarlist.js",["99"],"import React, {useState} from 'react';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { Button, Dialog, FormControl, InputLabel, makeStyles, MenuItem, Select } from '@material-ui/core';\r\nimport {Grid} from \"@material-ui/core\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport axios from 'axios';\r\nconst myStyle = makeStyles((theme) =>(\r\n    {\r\n        modal : {\r\n                    backgroundColor : 'transparent',\r\n                },\r\n        \r\n        addbutton :    {\r\n                        position : 'relative',\r\n                        fontSize : '50px',\r\n                        top : '35px',\r\n                        left : '-640px',\r\n                        Color : 'lightgrey'\r\n                //textAlign : 'top',\r\n                    },\r\n        form :  {\r\n                    minHeight : '1%',\r\n                    marginLeft: \"30%\",\r\n                    minWidth: '25%',\r\n                    textAlign : 'center',\r\n                },\r\n    }\r\n))\r\nfunction AddCarlist(props){\r\n\r\n    const myclass = myStyle();\r\n    const [open,setOpen] =useState(false);\r\n    const [license,setLicense] = useState();\r\n    const [driver,setDriver] = useState();\r\n    const [brand,setBrand] = useState();\r\n    const [manufacturedate,setManufacturedate] = useState();\r\n    const [registerdate,setRegisterdate] = useState();\r\n    const [cartype, setCartype] = useState();\r\n    const [state, setState] = useState();\r\n\r\n    const handleOpenAdd = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleCloseAdd = () => {\r\n        setOpen(false)\r\n    }\r\n    const handleLicense = (event) => {\r\n        setLicense(event.target.value);\r\n    }\r\n    const handleDriver = (event) => {\r\n        setDriver(event.target.value);\r\n    }\r\n    const handleBrand = (event) => {\r\n        setBrand(event.target.value);\r\n    }\r\n    const handleManufacturedate = (event) => {\r\n        setManufacturedate(event.target.value);\r\n    }\r\n    const handleRegisterdate = (event) => {\r\n        setRegisterdate(event.target.value);\r\n    }\r\n    const handleCartype = (event) => {\r\n        setCartype(event.target.value);\r\n    }\r\n    const handleState = (event) => {\r\n        setState(event.target.value);\r\n    }\r\n    const handleSubmit = () =>\r\n    {\r\n        var data = {\r\n            license :license,\r\n            driver : driver,\r\n            brand : brand,\r\n            manufacturedate : manufacturedate,\r\n            registerdate : registerdate,\r\n            cartype : cartype,\r\n            state : state\r\n\r\n        };\r\n        axios   .post(\"http://localhost:8080/carlist/add\",data)\r\n                .then(res =>    {\r\n                                    console.log(res);\r\n                                    if(res.data.status === 0)\r\n                                    {\r\n                                        alert(\"Add successful.\");\r\n                                        window.location.reload();\r\n                                    }\r\n                                    else\r\n                                    {\r\n                                        alert(res.data.message);\r\n                                        window.location.reload();\r\n                                    }\r\n                                })\r\n        setLicense(null);\r\n        setDriver(null);\r\n        setBrand(null);\r\n        setManufacturedate(null);\r\n        setRegisterdate(null);\r\n        setCartype(null);\r\n        setState(null);\r\n        setOpen(false);\r\n    }\r\n    return (\r\n        <div>\r\n            <Button\r\n                onClick = {handleOpenAdd}\r\n            > \r\n                <AddIcon/>\r\n            </Button>\r\n            <Dialog  open={open} className = {myclass.grid}>\r\n                <DialogTitle id=\"form-dialog-title\">Thêm lịch trình</DialogTitle>\r\n                <DialogContent className = {myclass.dialog}> \r\n                    <Grid container spacing={5} >\r\n                        <Grid item>\r\n                            <TextField\r\n                                display=\"inline\"\r\n                                InputLabelProps={{ shrink: true }}  \r\n                                variant=\"outlined\"\r\n                                required\r\n                                label=\"Biển số xe\"\r\n                                onChange = {handleLicense}\r\n                            >\r\n                            </TextField>\r\n                        </Grid>\r\n                        <Grid item >\r\n                            <TextField\r\n                                display=\"inline\"\r\n                                InputLabelProps={{ shrink: true }} \r\n                                required\r\n                                variant=\"outlined\"\r\n                                label=\"Lái Xe\"\r\n                                onChange = {handleDriver}\r\n                            >\r\n                            </TextField>\r\n                        </Grid>\r\n                        <Grid item >\r\n                            <TextField\r\n                                InputLabelProps={{ shrink: true }}  \r\n                                variant=\"outlined\"\r\n                                required\r\n                                label=\"Hãng Xe\"\r\n                                onChange = {handleBrand}\r\n                            >\r\n                            </TextField>\r\n                        </Grid>\r\n                        <Grid item >\r\n                            <TextField\r\n                                InputLabelProps={{ shrink: true }}  \r\n                                variant=\"outlined\"\r\n                                required\r\n                                label=\"Đời xe\"\r\n                                onChange = {handleManufacturedate}\r\n                            >\r\n                            </TextField>\r\n                        </Grid>\r\n                        <Grid item >\r\n                            <TextField\r\n                                InputLabelProps={{ shrink: true }}  \r\n                                FormHelperTextProps = {{shrink: false}}\r\n                                variant=\"outlined\"\r\n                                required\r\n                                label=\"Ngày đăng kiểm\"\r\n                                type = \"date\"\r\n                                onChange = {handleRegisterdate}\r\n                            >\r\n                            </TextField>\r\n                        </Grid>\r\n                        <Grid item >\r\n                            <TextField\r\n                                InputLabelProps={{ shrink: true }}  \r\n                                variant=\"outlined\"\r\n                                required\r\n                                label=\"Loại xe\"\r\n                                onChange = {handleCartype}\r\n                            >\r\n                            </TextField> \r\n                        </Grid>\r\n                        <FormControl className = {myclass.form}>\r\n                            <InputLabel id = \"demo-simple-select-required-label\">Trạng thái</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-required-label\"\r\n                                id=\"demo-simple-select-required\"\r\n                                //InputLabelProps={{ shrink: true }}  \r\n                                variant=\"outlined\"\r\n                                onChange = {handleState}\r\n                            >\r\n                                <MenuItem>\r\n\r\n                                </MenuItem>\r\n                                <MenuItem value = \"Active\">Active</MenuItem>\r\n                                <MenuItem value = \"Inactive\">Inactive</MenuItem>\r\n                            </Select> \r\n                        </FormControl>    \r\n                    </Grid>\r\n                </DialogContent>   \r\n                <DialogActions>\r\n                    <Button \r\n                        onClick={handleCloseAdd} \r\n                        color=\"primary\"\r\n                    >\r\n                        Cancel\r\n                    </Button>\r\n                    <Button \r\n                        onClick={handleSubmit} \r\n                        color=\"primary\"\r\n                    >\r\n                        Submit\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddCarlist;",{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":91,"column":9,"nodeType":"106","messageId":"107","endLine":91,"endColumn":13},{"ruleId":"104","severity":1,"message":"108","line":95,"column":11,"nodeType":"106","messageId":"107","endLine":95,"endColumn":15},{"ruleId":"104","severity":1,"message":"109","line":3,"column":8,"nodeType":"106","messageId":"107","endLine":3,"endColumn":16},{"ruleId":"104","severity":1,"message":"110","line":94,"column":12,"nodeType":"106","messageId":"107","endLine":94,"endColumn":23},{"ruleId":"111","severity":1,"message":"112","line":158,"column":9,"nodeType":"113","endLine":164,"endColumn":13},{"ruleId":"104","severity":1,"message":"114","line":85,"column":9,"nodeType":"106","messageId":"107","endLine":85,"endColumn":16},{"ruleId":"115","severity":1,"message":"116","line":166,"column":5,"nodeType":"117","messageId":"118","endLine":166,"endColumn":16,"fix":"119"},{"ruleId":"111","severity":1,"message":"112","line":237,"column":13,"nodeType":"113","endLine":237,"endColumn":44},{"ruleId":"104","severity":1,"message":"120","line":2,"column":10,"nodeType":"106","messageId":"107","endLine":2,"endColumn":17},{"ruleId":"104","severity":1,"message":"121","line":2,"column":19,"nodeType":"106","messageId":"107","endLine":2,"endColumn":30},{"ruleId":"104","severity":1,"message":"122","line":2,"column":32,"nodeType":"106","messageId":"107","endLine":2,"endColumn":46},{"ruleId":"104","severity":1,"message":"123","line":6,"column":8,"nodeType":"106","messageId":"107","endLine":6,"endColumn":15},{"ruleId":"104","severity":1,"message":"124","line":8,"column":8,"nodeType":"106","messageId":"107","endLine":8,"endColumn":14},{"ruleId":"104","severity":1,"message":"125","line":25,"column":10,"nodeType":"106","messageId":"107","endLine":25,"endColumn":25},{"ruleId":"104","severity":1,"message":"110","line":83,"column":12,"nodeType":"106","messageId":"107","endLine":83,"endColumn":23},{"ruleId":"111","severity":1,"message":"112","line":144,"column":9,"nodeType":"113","endLine":150,"endColumn":11},{"ruleId":"115","severity":1,"message":"116","line":83,"column":9,"nodeType":"117","messageId":"118","endLine":83,"endColumn":22,"fix":"126"},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"no-unused-vars","'name' is assigned a value but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","'HomePage' is defined but never used.","'ToggleErase' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'rootRef' is assigned a value but never used.","no-whitespace-before-property","Unexpected whitespace before property post.","MemberExpression","unexpectedWhitespace",{"range":"129","text":"130"},"'MDBCard' is defined but never used.","'MDBCardBody' is defined but never used.","'MDBDataTableV5' is defined but never used.","'AddIcon' is defined but never used.","'AddBox' is defined but never used.","'TablePagination' is defined but never used.",{"range":"131","text":"130"},"no-global-assign","no-unsafe-negation",[5002,5004],".",[2706,2710]]